<!--Differences with scalastyle-config.xml-->
<!--MagicNumberChecker disabled-->
<!--FileLineLengthChecker disabled-->

<scalastyle>
    <name>Scalastyle standard configuration</name>
    <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="false">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[160]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
        <parameters>
            <parameter name="ignore">
                <![CDATA[-1,0,1,2,3,4,5,6,7,8,9,10,16,32,256,0x00,0x01,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x10]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker"
           enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker"
           enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[16]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="false">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="false"></check>
    <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
    <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check level="error" class="org.scalastyle.scalariform.TodoCommentChecker" enabled="false">
        <parameters>
            <parameter name="words">TODO|FIXME|todo|fixme|bug|BUG</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println|noSpaces]]></parameter>
        </parameters>
        <customMessage><![CDATA[println|noSpaces are disabled]]></customMessage>
    </check>
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[localhost]]></parameter>
        </parameters>
        <customMessage><![CDATA[use 127.0.0.1 over localhost]]></customMessage>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ImportOrderChecker" enabled="true">
        <parameters>
            <parameter name="groups">java,scala,3rdParty,softfork</parameter>
            <parameter name="group.java">javax?\..*</parameter>
            <parameter name="group.scala">scala\..*</parameter>
            <parameter name="group.3rdParty">(?!it\.softfork\.).*</parameter>
            <parameter name="group.softfork">it\.softfork\..*</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true" >
        <parameters>
            <parameter name="singleLineAllowed">true</parameter>
            <parameter name="doubleLineAllowed">false</parameter>
        </parameters>
    </check>
</scalastyle>
